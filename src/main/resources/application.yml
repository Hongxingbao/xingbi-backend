# 公共配置文件
spring:
  application:
    name: xingbi-backend
  # 默认 dev 环境
  profiles:
    active: dev
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # session 配置
  session:
    # todo 取消注释开启分布式 session（须先配置 Redis）
    # store-type: redis
    # 30 天过期
    timeout: 2592000
  # 数据库配置
  datasource:
    driver-class-name: ${spring.datasource.driver-class-name}
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
  # Redis 配置
  # todo 需替换配置，然后取消注释
  redis:
    database: ${spring.redis.database}
    host: ${spring.redis.host}
    port: ${spring.redis.port}
    timeout: ${spring.redis.timeout}
    password: ${spring.redis.password}
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB
  rabbitmq:
    host: ${spring.rabbitmq.host} # 主机名
    port: ${spring.rabbitmq.port} # 端口
    virtual-host: ${spring.rabbitmq.virtual-host} # 虚拟主机
    username: ${spring.rabbitmq.username} # 用户名
    password: ${spring.rabbitmq.password} # 密码
#    listener:
#      simple:
#        retry:
#          enabled: true #开启消费者失败重试
#          initial-interval: 1000 #初始的失败等待时长为1秒
#          multiplier: 1 #失败的等待时长倍数，下次等待时长 = multiplier * last - interval
#          max-attempts: 1 #最大重试次数
#          stateless: true # true无状态；false有状态，如果业务中包含事务，这里改为false
server:
  address: ${server.address}
  port: ${server.port}
  servlet:
    context-path: ${server.servlet.context-path}
    # cookie 30 天过期
    session:
      cookie:
        max-age: ${server.servlet.session.cookie.max-age}
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false #禁用数据库列名到Java实体类字段名的映射转换，即保持原样
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
      update-strategy: not_null #表示只有在实体类字段不为null时才会被更新。这是一种乐观锁的策略，可以避免覆盖其他线程的更新。

# 对象存储
xing:
  alioss:
    endpoint: ${xing.alioss.endpoint}
    access-key-id: ${xing.alioss.access-key-id}
    access-key-secret: ${xing.alioss.access-key-secret}
    bucket-name: ${xing.alioss.bucket-name}
yuapi:
  client:
    access-key: ${yuapi.client.access-key}
    secret-key: ${yuapi.client.secret-key}
# 文心一言AK、SK
gear:
  wenxin:
    api-key: ${gear.wenxin.api-key}
    secret-key: ${gear.wenxin.secret-key}
logging:
  level:
    com.sing.init: debug
  pattern:
    dateformat: HH:mm:ss:SSS
  file:
    path: "logs/${spring.application.name}"
